/**
 * govinfo Link Service
 * <p>The <strong>govinfo</strong> Link Service provides services for developers and webmasters to access content and metadata on <strong>govinfo</strong>. Current and planned services include a link service, list service, and search service. Please contact <a href=\"https://www.gpo.gov/askgpo/\">askGPO</a> for additional information about current or planned services.</p> <p>The link service is used to create embedded links to content and metadata on <strong>govinfo</strong> and is currently enabled for the collections below. The collection code is listed in parenthesis after each collection name, and the available queries are listed below each collection. More information about each query is provided on the individual collection page.</p>
 *
 * OpenAPI spec version: 0.5.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.govinfoLinkService) {
      root.govinfoLinkService = {};
    }
    root.govinfoLinkService.CongressionalCommitteePrints = factory(root.govinfoLinkService.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * CongressionalCommitteePrintsCPRT service.
   * @module api/CongressionalCommitteePrints
   * @version 0.5.0
   */

  /**
   * Constructs a new CongressionalCommitteePrints. 
   * @alias module:api/CongressionalCommitteePrints
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the cprtHouseFetchUsingGET operation.
     * @callback module:api/CongressionalCommitteePrints~cprtHouseFetchUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query: congress, chamber, house print number, committee
     * @param {Number} congress This is the numerical Congress number. Sample value is 109.
     * @param {Number} printnum This is the numerical House committee print number. House prints are not numbered consecutively across committees within a Congress. For example, 109-2 could exist for both the Ways and Means Committee and the Rules and Administration Committee within the 109th Congress. Sample value is 2.
     * @param {String} committee This is the name of the House committee. Recommend encoding special characters and spaces (%20). Sample value is Ways and Means.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.linkType This is the format of the returned document. Default is pdf. Other values are html, mods, premis, details, context.
     * @param {module:api/CongressionalCommitteePrints~cprtHouseFetchUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.cprtHouseFetchUsingGET = function(congress, printnum, committee, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'congress' is set
      if (congress === undefined || congress === null) {
        throw new Error("Missing the required parameter 'congress' when calling cprtHouseFetchUsingGET");
      }

      // verify the required parameter 'printnum' is set
      if (printnum === undefined || printnum === null) {
        throw new Error("Missing the required parameter 'printnum' when calling cprtHouseFetchUsingGET");
      }

      // verify the required parameter 'committee' is set
      if (committee === undefined || committee === null) {
        throw new Error("Missing the required parameter 'committee' when calling cprtHouseFetchUsingGET");
      }


      var pathParams = {
        'congress': congress,
        'printnum': printnum,
        'committee': committee
      };
      var queryParams = {
        'link-type': opts['linkType'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/cprt/{congress}/house/{printnum}/{committee}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the cprtJacketFetchUsingGET operation.
     * @callback module:api/CongressionalCommitteePrints~cprtJacketFetchUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query: congress, jacket number
     * @param {Number} congress This is the numerical Congress number. Sample value is 112.
     * @param {String} jacketid This is the GPO jacket number. The jacket number is typically listed on the first page in the lower left corner. Jacket number is unique within a Congress. Sample value is 74-558.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.linkType This is the format of the returned document. Default is pdf. Other values are html, mods, premis, details, context.
     * @param {module:api/CongressionalCommitteePrints~cprtJacketFetchUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.cprtJacketFetchUsingGET = function(congress, jacketid, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'congress' is set
      if (congress === undefined || congress === null) {
        throw new Error("Missing the required parameter 'congress' when calling cprtJacketFetchUsingGET");
      }

      // verify the required parameter 'jacketid' is set
      if (jacketid === undefined || jacketid === null) {
        throw new Error("Missing the required parameter 'jacketid' when calling cprtJacketFetchUsingGET");
      }


      var pathParams = {
        'congress': congress,
        'jacketid': jacketid
      };
      var queryParams = {
        'link-type': opts['linkType'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/cprt/{congress}/{jacketid}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the cprtSenateFetchUsingGET operation.
     * @callback module:api/CongressionalCommitteePrints~cprtSenateFetchUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query: congress, chamber, senate print number
     * @param {Number} congress This is the numerical Congress number. Sample value is 112.
     * @param {Number} printnum This is the numerical Senate print number. Senate prints are numbered consecutively across committees within a Congress. Sample value is 4.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.linkType This is the format of the returned document. Default is pdf. Other values are html, mods, premis, details, context.
     * @param {module:api/CongressionalCommitteePrints~cprtSenateFetchUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.cprtSenateFetchUsingGET = function(congress, printnum, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'congress' is set
      if (congress === undefined || congress === null) {
        throw new Error("Missing the required parameter 'congress' when calling cprtSenateFetchUsingGET");
      }

      // verify the required parameter 'printnum' is set
      if (printnum === undefined || printnum === null) {
        throw new Error("Missing the required parameter 'printnum' when calling cprtSenateFetchUsingGET");
      }


      var pathParams = {
        'congress': congress,
        'printnum': printnum
      };
      var queryParams = {
        'link-type': opts['linkType'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/cprt/{congress}/senate/{printnum}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
